package solesCerebros;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.math.Rectangle;

import hud.Hud;
import pantallas.Partida;
import recursos.Entradas;
import recursos.Imagen;
import recursos.Render;
import recursos.Utiles;

public class SolCerebro {

	private int VALOR = 25;
	private int CANTIDAD_MAXIMA = 8000;
	private float tiempo;
	private int tiempoCaida = 2;
	private float duracion = 2;
	private Imagen imagen;
	private Rectangle area;
	private int y = Render.ALTO - 120;
	private int xRandom;
	private int yFinal;

	private Sound sonidoClick;
	private boolean unaVezSonido = false;

	private boolean activarDesaparicion = false;
	private float tiempoAnimacion = 0f;
	private float restaAlpha = 1f;

	public SolCerebro(String rutaImagen) {
		this.imagen = new Imagen(rutaImagen, 70, 70);
		this.imagen.setY(y);
		this.yFinal = Utiles.r.nextInt((Render.ALTO / 2) + 30);
//		this.xRandom = Utiles.r.nextInt(200, (Render.ANCHO - 100)); NO USAR EL RANDOM ASÍ, XQ ALGUNAS VERSIONES DE JAVA NO SON COMPATIBLES CON ESA FORMA
		// mejor hacer asi: (max - min) + min
		this.xRandom = Utiles.r.nextInt(((Render.ANCHO - 100) - 200)) + 200;
		// (max - min) + min
		this.imagen.setX(xRandom);
		this.imagen.setAlpha(0f);

		area = new Rectangle(xRandom, y, 70, 70);
		area.setY(y);
		sonidoClick = Gdx.audio.newSound(Gdx.files.internal("audio/solCerebro.mp3"));
	}

	public void caer() {

		this.area.x = xRandom;

		if (this.activarDesaparicion) {
			animacionDesaparecer();
		}

		this.tiempo += Gdx.graphics.getDeltaTime();

		if (this.tiempo > this.tiempoCaida) {
			this.activarDesaparicion = false;
			this.imagen.setAlpha(1f);
			this.restaAlpha = 1f;
			this.unaVezSonido = false;

			if (this.y > this.yFinal) {
				this.y -= 2;
				this.area.y = y;
			} else {

				this.duracion -= Gdx.graphics.getDeltaTime();

				if (this.duracion < 0) {
					desaparecer();
				}

			}
			this.imagen.setY(y);

		}
	}

	public void clickear() {
		if (area.contains(Entradas.getMouseX(), Entradas.getMouseY())) {
			if (Entradas.getBotonMouse() == 0) {
				desaparecer();
				if (!unaVezSonido) {
					this.sonidoClick.play(Render.volumenSfx);
					if (Hud.cantSoles <= CANTIDAD_MAXIMA) {
						Hud.cantSoles += VALOR;
					}
					this.unaVezSonido = true;
				}
			}
		}
	}

	public boolean desaparecer() {

		this.activarDesaparicion = true;

		this.duracion = 2;

		this.tiempo = 0;

		this.yFinal = Utiles.r.nextInt(Render.ALTO / 2);

		return true;
	}

	public void animacionDesaparecer() {

		this.tiempoAnimacion += Gdx.graphics.getDeltaTime();
		if (tiempoAnimacion > 0.01f) {

			if (restaAlpha > 0) {
				this.restaAlpha -= 0.1f;
				this.imagen.setAlpha(restaAlpha);
				this.tiempoAnimacion = 0;
			} else {
//				this.xRandom = Utiles.r.nextInt(200, (Render.ANCHO - 100)); (max - min) + min
				this.xRandom = Utiles.r.nextInt(((Render.ANCHO - 100) - 200) + 200);
				this.imagen.setX(xRandom);
				this.y = Render.ALTO - 120;
				this.area.y = y + 300; // le sumamos 100 xq sino la hitbox se puede seguir clickeando por mas que esté
										// invisible
			}
		}
	}

	public void dibujar() {
		imagen.dibujar();
	}

	public int getValor() {
		return VALOR;
	}

	public int getTiempoCaida() {
		return tiempoCaida;
	}

	public float getDuracion() {
		return duracion;
	}

	public Imagen getImagen() {
		return imagen;
	}

	public Rectangle getArea() {
		return area;
	}

}
